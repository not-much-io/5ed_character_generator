var _user$project$View$skillsBlock = function (skill_scores) {
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_elm_lang$html$Html$h4,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text('Skills')
					])),
				_elm_lang$html$Html$text(
				A2(
					_elm_lang$core$Basics_ops['++'],
					'Acrobatics: ',
					_elm_lang$core$Basics$toString(skill_scores.acrobatics))),
				A2(
				_elm_lang$html$Html$br,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[])),
				_elm_lang$html$Html$text(
				A2(
					_elm_lang$core$Basics_ops['++'],
					'Animal Handling: ',
					_elm_lang$core$Basics$toString(skill_scores.animal_handling))),
				A2(
				_elm_lang$html$Html$br,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[])),
				_elm_lang$html$Html$text(
				A2(
					_elm_lang$core$Basics_ops['++'],
					'Arcana: ',
					_elm_lang$core$Basics$toString(skill_scores.arcana))),
				A2(
				_elm_lang$html$Html$br,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[])),
				_elm_lang$html$Html$text(
				A2(
					_elm_lang$core$Basics_ops['++'],
					'Athletics: ',
					_elm_lang$core$Basics$toString(skill_scores.athletics))),
				A2(
				_elm_lang$html$Html$br,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[])),
				_elm_lang$html$Html$text(
				A2(
					_elm_lang$core$Basics_ops['++'],
					'Deception: ',
					_elm_lang$core$Basics$toString(skill_scores.deception))),
				A2(
				_elm_lang$html$Html$br,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[])),
				_elm_lang$html$Html$text(
				A2(
					_elm_lang$core$Basics_ops['++'],
					'History: ',
					_elm_lang$core$Basics$toString(skill_scores.history))),
				A2(
				_elm_lang$html$Html$br,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[])),
				_elm_lang$html$Html$text(
				A2(
					_elm_lang$core$Basics_ops['++'],
					'Insight: ',
					_elm_lang$core$Basics$toString(skill_scores.insight))),
				A2(
				_elm_lang$html$Html$br,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[])),
				_elm_lang$html$Html$text(
				A2(
					_elm_lang$core$Basics_ops['++'],
					'Intimidation: ',
					_elm_lang$core$Basics$toString(skill_scores.intimidation))),
				A2(
				_elm_lang$html$Html$br,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[])),
				_elm_lang$html$Html$text(
				A2(
					_elm_lang$core$Basics_ops['++'],
					'Investigation: ',
					_elm_lang$core$Basics$toString(skill_scores.investigation))),
				A2(
				_elm_lang$html$Html$br,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[])),
				_elm_lang$html$Html$text(
				A2(
					_elm_lang$core$Basics_ops['++'],
					'Medicine: ',
					_elm_lang$core$Basics$toString(skill_scores.medicine))),
				A2(
				_elm_lang$html$Html$br,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[])),
				_elm_lang$html$Html$text(
				A2(
					_elm_lang$core$Basics_ops['++'],
					'Nature: ',
					_elm_lang$core$Basics$toString(skill_scores.nature))),
				A2(
				_elm_lang$html$Html$br,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[])),
				_elm_lang$html$Html$text(
				A2(
					_elm_lang$core$Basics_ops['++'],
					'Perception: ',
					_elm_lang$core$Basics$toString(skill_scores.perception))),
				A2(
				_elm_lang$html$Html$br,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[])),
				_elm_lang$html$Html$text(
				A2(
					_elm_lang$core$Basics_ops['++'],
					'Performance: ',
					_elm_lang$core$Basics$toString(skill_scores.performance))),
				A2(
				_elm_lang$html$Html$br,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[])),
				_elm_lang$html$Html$text(
				A2(
					_elm_lang$core$Basics_ops['++'],
					'Persuasion: ',
					_elm_lang$core$Basics$toString(skill_scores.persuasion))),
				A2(
				_elm_lang$html$Html$br,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[])),
				_elm_lang$html$Html$text(
				A2(
					_elm_lang$core$Basics_ops['++'],
					'Religion: ',
					_elm_lang$core$Basics$toString(skill_scores.religion))),
				A2(
				_elm_lang$html$Html$br,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[])),
				_elm_lang$html$Html$text(
				A2(
					_elm_lang$core$Basics_ops['++'],
					'Sleight of Hand: ',
					_elm_lang$core$Basics$toString(skill_scores.sleight_of_hand))),
				A2(
				_elm_lang$html$Html$br,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[])),
				_elm_lang$html$Html$text(
				A2(
					_elm_lang$core$Basics_ops['++'],
					'Stealth: ',
					_elm_lang$core$Basics$toString(skill_scores.stealth))),
				A2(
				_elm_lang$html$Html$br,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[])),
				_elm_lang$html$Html$text(
				A2(
					_elm_lang$core$Basics_ops['++'],
					'Survival: ',
					_elm_lang$core$Basics$toString(skill_scores.survival))),
				A2(
				_elm_lang$html$Html$br,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[]))
			]));
};
var _user$project$View$savingThrowsBlock = function (saving_throws) {
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_elm_lang$html$Html$h4,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text('Saving Throws')
					])),
				_elm_lang$html$Html$text(
				A2(
					_elm_lang$core$Basics_ops['++'],
					'STR: ',
					_elm_lang$core$Basics$toString(saving_throws.str))),
				A2(
				_elm_lang$html$Html$br,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[])),
				_elm_lang$html$Html$text(
				A2(
					_elm_lang$core$Basics_ops['++'],
					'DEX: ',
					_elm_lang$core$Basics$toString(saving_throws.dex))),
				A2(
				_elm_lang$html$Html$br,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[])),
				_elm_lang$html$Html$text(
				A2(
					_elm_lang$core$Basics_ops['++'],
					'CON: ',
					_elm_lang$core$Basics$toString(saving_throws.con))),
				A2(
				_elm_lang$html$Html$br,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[])),
				_elm_lang$html$Html$text(
				A2(
					_elm_lang$core$Basics_ops['++'],
					'INT: ',
					_elm_lang$core$Basics$toString(saving_throws.$int))),
				A2(
				_elm_lang$html$Html$br,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[])),
				_elm_lang$html$Html$text(
				A2(
					_elm_lang$core$Basics_ops['++'],
					'WIS: ',
					_elm_lang$core$Basics$toString(saving_throws.wis))),
				A2(
				_elm_lang$html$Html$br,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[])),
				_elm_lang$html$Html$text(
				A2(
					_elm_lang$core$Basics_ops['++'],
					'CHA: ',
					_elm_lang$core$Basics$toString(saving_throws.cha)))
			]));
};
var _user$project$View$abilitiesBlock = F2(
	function (ability_scores, ability_modifiers) {
		return A2(
			_elm_lang$html$Html$div,
			_elm_lang$core$Native_List.fromArray(
				[]),
			_elm_lang$core$Native_List.fromArray(
				[
					A2(
					_elm_lang$html$Html$h4,
					_elm_lang$core$Native_List.fromArray(
						[]),
					_elm_lang$core$Native_List.fromArray(
						[
							_elm_lang$html$Html$text('Ability Scores')
						])),
					_elm_lang$html$Html$text(
					A2(
						_elm_lang$core$Basics_ops['++'],
						'STR: ',
						A2(
							_elm_lang$core$Basics_ops['++'],
							_elm_lang$core$Basics$toString(ability_scores.str),
							A2(
								_elm_lang$core$Basics_ops['++'],
								' (',
								A2(
									_elm_lang$core$Basics_ops['++'],
									_elm_lang$core$Basics$toString(ability_modifiers.str),
									')'))))),
					A2(
					_elm_lang$html$Html$br,
					_elm_lang$core$Native_List.fromArray(
						[]),
					_elm_lang$core$Native_List.fromArray(
						[])),
					_elm_lang$html$Html$text(
					A2(
						_elm_lang$core$Basics_ops['++'],
						'DEX: ',
						A2(
							_elm_lang$core$Basics_ops['++'],
							_elm_lang$core$Basics$toString(ability_scores.dex),
							A2(
								_elm_lang$core$Basics_ops['++'],
								' (',
								A2(
									_elm_lang$core$Basics_ops['++'],
									_elm_lang$core$Basics$toString(ability_modifiers.dex),
									')'))))),
					A2(
					_elm_lang$html$Html$br,
					_elm_lang$core$Native_List.fromArray(
						[]),
					_elm_lang$core$Native_List.fromArray(
						[])),
					_elm_lang$html$Html$text(
					A2(
						_elm_lang$core$Basics_ops['++'],
						'CON: ',
						A2(
							_elm_lang$core$Basics_ops['++'],
							_elm_lang$core$Basics$toString(ability_scores.con),
							A2(
								_elm_lang$core$Basics_ops['++'],
								' (',
								A2(
									_elm_lang$core$Basics_ops['++'],
									_elm_lang$core$Basics$toString(ability_modifiers.con),
									')'))))),
					A2(
					_elm_lang$html$Html$br,
					_elm_lang$core$Native_List.fromArray(
						[]),
					_elm_lang$core$Native_List.fromArray(
						[])),
					_elm_lang$html$Html$text(
					A2(
						_elm_lang$core$Basics_ops['++'],
						'INT: ',
						A2(
							_elm_lang$core$Basics_ops['++'],
							_elm_lang$core$Basics$toString(ability_scores.$int),
							A2(
								_elm_lang$core$Basics_ops['++'],
								' (',
								A2(
									_elm_lang$core$Basics_ops['++'],
									_elm_lang$core$Basics$toString(ability_modifiers.$int),
									')'))))),
					A2(
					_elm_lang$html$Html$br,
					_elm_lang$core$Native_List.fromArray(
						[]),
					_elm_lang$core$Native_List.fromArray(
						[])),
					_elm_lang$html$Html$text(
					A2(
						_elm_lang$core$Basics_ops['++'],
						'WIS: ',
						A2(
							_elm_lang$core$Basics_ops['++'],
							_elm_lang$core$Basics$toString(ability_scores.wis),
							A2(
								_elm_lang$core$Basics_ops['++'],
								' (',
								A2(
									_elm_lang$core$Basics_ops['++'],
									_elm_lang$core$Basics$toString(ability_modifiers.wis),
									')'))))),
					A2(
					_elm_lang$html$Html$br,
					_elm_lang$core$Native_List.fromArray(
						[]),
					_elm_lang$core$Native_List.fromArray(
						[])),
					_elm_lang$html$Html$text(
					A2(
						_elm_lang$core$Basics_ops['++'],
						'CHA: ',
						A2(
							_elm_lang$core$Basics_ops['++'],
							_elm_lang$core$Basics$toString(ability_scores.cha),
							A2(
								_elm_lang$core$Basics_ops['++'],
								' (',
								A2(
									_elm_lang$core$Basics_ops['++'],
									_elm_lang$core$Basics$toString(ability_modifiers.cha),
									')')))))
				]));
	});
var _user$project$View$classBlock = function (cls) {
	var propBlock = F2(
		function (name, val) {
			return A2(
				_elm_lang$html$Html$div,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[
						A2(
						_elm_lang$html$Html$h5,
						_elm_lang$core$Native_List.fromArray(
							[]),
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html$text(name)
							])),
						_elm_lang$html$Html$text(val)
					]));
		});
	var classInfoBlock = function (cls) {
		return A2(
			_elm_lang$html$Html$div,
			_elm_lang$core$Native_List.fromArray(
				[]),
			_elm_lang$core$Native_List.fromArray(
				[
					A2(
					propBlock,
					'Class HD',
					_elm_lang$core$Basics$toString(cls.hit_die)),
					A2(
					propBlock,
					'Class Saving Throws',
					_elm_lang$core$Basics$toString(cls.saving_throws))
				]));
	};
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_elm_lang$html$Html$h4,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text('Class')
					])),
				_elm_lang$html$Html$text('{Class Name} -- TODO'),
				classInfoBlock(cls)
			]));
};
var _user$project$View$nameBlock = function (name) {
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_elm_lang$html$Html$h4,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text('Name')
					])),
				_elm_lang$html$Html$text(name)
			]));
};
var _user$project$View$characterSheet = function ($char) {
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_elm_lang$html$Html$h2,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text('Character Sheet')
					])),
				A2(
				_elm_lang$html$Html$div,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$style(
						_elm_lang$core$Native_List.fromArray(
							[
								{ctor: '_Tuple2', _0: 'display', _1: 'flex'},
								{ctor: '_Tuple2', _0: 'justify-content', _1: 'center'},
								{ctor: '_Tuple2', _0: 'align-items', _1: 'center'}
							]))
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						A2(
						_elm_lang$html$Html$div,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$style(
								_elm_lang$core$Native_List.fromArray(
									[
										{ctor: '_Tuple2', _0: 'margin', _1: '20px'}
									]))
							]),
						_elm_lang$core$Native_List.fromArray(
							[
								_user$project$View$nameBlock($char.name),
								_user$project$View$classBlock($char.$class),
								A2(_user$project$View$abilitiesBlock, $char.ability_scores, $char.ability_modifiers)
							])),
						A2(
						_elm_lang$html$Html$div,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$style(
								_elm_lang$core$Native_List.fromArray(
									[
										{ctor: '_Tuple2', _0: 'margin', _1: '20px'}
									]))
							]),
						_elm_lang$core$Native_List.fromArray(
							[
								A2(
								_elm_lang$html$Html$h4,
								_elm_lang$core$Native_List.fromArray(
									[]),
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$html$Html$text(
										A2(
											_elm_lang$core$Basics_ops['++'],
											'Experience points: ',
											_elm_lang$core$Basics$toString($char.experience_points)))
									])),
								A2(
								_elm_lang$html$Html$h4,
								_elm_lang$core$Native_List.fromArray(
									[]),
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$html$Html$text(
										A2(
											_elm_lang$core$Basics_ops['++'],
											'Level: ',
											_elm_lang$core$Basics$toString($char.level)))
									])),
								A2(
								_elm_lang$html$Html$h4,
								_elm_lang$core$Native_List.fromArray(
									[]),
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$html$Html$text(
										A2(
											_elm_lang$core$Basics_ops['++'],
											'Proficiency Bonus: ',
											_elm_lang$core$Basics$toString($char.proficiency_bonus)))
									])),
								_user$project$View$savingThrowsBlock($char.saving_throws)
							])),
						A2(
						_elm_lang$html$Html$div,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$style(
								_elm_lang$core$Native_List.fromArray(
									[
										{ctor: '_Tuple2', _0: 'margin', _1: '20px'}
									]))
							]),
						_elm_lang$core$Native_List.fromArray(
							[
								_user$project$View$skillsBlock($char.skills)
							]))
					]))
			]));
};
var _user$project$View$skillProfsInput = function (init_char_data) {
	var spent_skill_profs = _elm_lang$core$List$length(init_char_data.skill_profs);
	var selected_skills = init_char_data.skill_profs;
	var _p0 = init_char_data.$class;
	var skill_profs = _p0.skill_profs;
	var skill_choices = _p0.skill_choices;
	var remaining_skill_profs = skill_profs - spent_skill_profs;
	var skillCheckbox = function (skill) {
		return A2(
			_elm_lang$html$Html$div,
			_elm_lang$core$Native_List.fromArray(
				[]),
			_elm_lang$core$Native_List.fromArray(
				[
					A2(
					_elm_lang$html$Html$input,
					_elm_lang$core$Native_List.fromArray(
						[
							_elm_lang$html$Html_Attributes$type$('checkbox'),
							_elm_lang$html$Html_Attributes$name('skill_prof'),
							_elm_lang$html$Html_Attributes$value(
							_elm_lang$core$Basics$toString(skill)),
							_elm_lang$html$Html_Events$onCheck(
							function (bool) {
								return A2(_user$project$Types$UpdateSkillProficiencies, skill, bool);
							}),
							_elm_lang$html$Html_Attributes$disabled(
							_elm_lang$core$Native_Utils.eq(remaining_skill_profs, 0) && _elm_lang$core$Basics$not(
								A2(_elm_lang$core$List$member, skill, selected_skills)))
						]),
					_elm_lang$core$Native_List.fromArray(
						[])),
					_elm_lang$html$Html$text(
					_elm_lang$core$Basics$toString(skill)),
					A2(
					_elm_lang$html$Html$br,
					_elm_lang$core$Native_List.fromArray(
						[]),
					_elm_lang$core$Native_List.fromArray(
						[]))
				]));
	};
	var lbl = _elm_lang$html$Html$text(
		A2(
			_elm_lang$core$Basics_ops['++'],
			'Skill proficiencies: ',
			_elm_lang$core$Basics$toString(remaining_skill_profs)));
	var skill_checkboxes = A2(_elm_lang$core$List$map, skillCheckbox, skill_choices);
	var skills = _elm_lang$core$Native_List.fromArray(
		[_user$project$Types$Acrobatics, _user$project$Types$AnimalHandling, _user$project$Types$Arcana, _user$project$Types$Athletics, _user$project$Types$Deception, _user$project$Types$History, _user$project$Types$Insight, _user$project$Types$Intimidation, _user$project$Types$Investigation, _user$project$Types$Medicine, _user$project$Types$Nature, _user$project$Types$Perception, _user$project$Types$Performance, _user$project$Types$Persuasion, _user$project$Types$Religion, _user$project$Types$SleightOfHand, _user$project$Types$Stealth, _user$project$Types$Survival]);
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[]),
		A2(_elm_lang$core$List_ops['::'], lbl, skill_checkboxes));
};
var _user$project$View$experiencePointsInput = function (currXp) {
	var xpToInt = function (xp_str) {
		return A2(
			_elm_lang$core$Result$withDefault,
			currXp,
			_elm_lang$core$String$toInt(xp_str));
	};
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[]),
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html$text('Experience Points:'),
				A2(
				_elm_lang$html$Html$input,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$type$('number'),
						_elm_lang$html$Html_Attributes$min('0'),
						_elm_lang$html$Html_Attributes$max('355000'),
						_elm_lang$html$Html_Attributes$value(
						_elm_lang$core$Basics$toString(currXp)),
						_elm_lang$html$Html_Events$onInput(
						function (xp_str) {
							return _user$project$Types$UpdateExperiencePoints(
								xpToInt(xp_str));
						})
					]),
				_elm_lang$core$Native_List.fromArray(
					[]))
			]));
};
var _user$project$View$abilityScoreInput = function (currAbilityScores) {
	var getAbility = function (ability) {
		var _p1 = ability;
		switch (_p1.ctor) {
			case 'Strength':
				return currAbilityScores.str;
			case 'Dexterity':
				return currAbilityScores.dex;
			case 'Constitution':
				return currAbilityScores.con;
			case 'Intelligence':
				return currAbilityScores.$int;
			case 'Wisdom':
				return currAbilityScores.wis;
			default:
				return currAbilityScores.cha;
		}
	};
	var scoreToInt = F2(
		function (ability, score_str) {
			var $default = getAbility(ability);
			return A2(
				_elm_lang$core$Result$withDefault,
				$default,
				_elm_lang$core$String$toInt(score_str));
		});
	var abilityRangeScroller = function (ability) {
		var ability_str = _elm_lang$core$Basics$toString(ability);
		return A2(
			_elm_lang$html$Html$div,
			_elm_lang$core$Native_List.fromArray(
				[]),
			_elm_lang$core$Native_List.fromArray(
				[
					_elm_lang$html$Html$text(ability_str),
					A2(
					_elm_lang$html$Html$br,
					_elm_lang$core$Native_List.fromArray(
						[]),
					_elm_lang$core$Native_List.fromArray(
						[])),
					A2(
					_elm_lang$html$Html$input,
					_elm_lang$core$Native_List.fromArray(
						[
							_elm_lang$html$Html_Attributes$type$('number'),
							_elm_lang$html$Html_Attributes$min('8'),
							_elm_lang$html$Html_Attributes$max('16'),
							_elm_lang$html$Html_Attributes$value(
							_elm_lang$core$Basics$toString(
								getAbility(ability))),
							_elm_lang$html$Html_Events$onInput(
							function (score) {
								return A2(
									_user$project$Types$UpdateAbilityScores,
									ability,
									A2(scoreToInt, ability, score));
							})
						]),
					_elm_lang$core$Native_List.fromArray(
						[]))
				]));
	};
	var abilities = _elm_lang$core$Native_List.fromArray(
		[_user$project$Types$Strength, _user$project$Types$Dexterity, _user$project$Types$Constitution, _user$project$Types$Intelligence, _user$project$Types$Wisdom, _user$project$Types$Charisma]);
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[]),
		A2(_elm_lang$core$List$map, abilityRangeScroller, abilities));
};
var _user$project$View$classDropdown = function (currClass) {
	var nameToClass = function (name) {
		var _p2 = name;
		switch (_p2) {
			case 'barbarian':
				return _user$project$CharacterClasses$barbarian;
			case 'bard':
				return _user$project$CharacterClasses$bard;
			case 'cleric':
				return _user$project$CharacterClasses$cleric;
			case 'druid':
				return _user$project$CharacterClasses$druid;
			case 'fighter':
				return _user$project$CharacterClasses$fighter;
			case 'monk':
				return _user$project$CharacterClasses$monk;
			case 'paladin':
				return _user$project$CharacterClasses$paladin;
			case 'ranger':
				return _user$project$CharacterClasses$ranger;
			case 'rogue':
				return _user$project$CharacterClasses$rogue;
			case 'sorcerer':
				return _user$project$CharacterClasses$sorcerer;
			case 'warlock':
				return _user$project$CharacterClasses$warlock;
			case 'wizard':
				return _user$project$CharacterClasses$wizard;
			default:
				return currClass;
		}
	};
	var character_classes_names = _elm_lang$core$Native_List.fromArray(
		['barbarian', 'bard', 'cleric', 'druid', 'fighter', 'monk', 'paladin', 'ranger', 'rogue', 'sorcerer', 'warlock', 'wizard']);
	var options = A2(
		_elm_lang$core$List$map,
		function (cls) {
			return A2(
				_elm_lang$html$Html$option,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$value(cls)
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text(cls)
					]));
		},
		character_classes_names);
	return A2(
		_elm_lang$html$Html$select,
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html_Events$onInput(
				function (cls_str) {
					return _user$project$Types$UpdateClass(
						nameToClass(cls_str));
				})
			]),
		options);
};
var _user$project$View$nameInput = function (currName) {
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_elm_lang$html$Html$textarea,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$placeholder('Name..'),
						_elm_lang$html$Html_Attributes$rows(1),
						_elm_lang$html$Html_Attributes$cols(20),
						_elm_lang$html$Html_Events$onInput(_user$project$Types$UpdateName),
						_elm_lang$html$Html_Attributes$value(currName)
					]),
				_elm_lang$core$Native_List.fromArray(
					[]))
			]));
};
var _user$project$View$characterCreationForm = function (_p3) {
	var _p4 = _p3;
	var _p6 = _p4.init_char_data;
	var _p5 = _p6;
	var name = _p5.name;
	var $class = _p5.$class;
	var ability_scores = _p5.ability_scores;
	var experience_points = _p5.experience_points;
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_elm_lang$html$Html$h2,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text('Initial Character Data Form')
					])),
				_user$project$View$nameInput(name),
				A2(
				_elm_lang$html$Html$br,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[])),
				_user$project$View$classDropdown($class),
				A2(
				_elm_lang$html$Html$br,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[])),
				_user$project$View$abilityScoreInput(ability_scores),
				A2(
				_elm_lang$html$Html$br,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[])),
				_user$project$View$experiencePointsInput(experience_points),
				A2(
				_elm_lang$html$Html$br,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[])),
				_user$project$View$skillProfsInput(_p6)
			]));
};
